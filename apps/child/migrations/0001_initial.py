# Generated by Django 4.2.15 on 2024-12-07 19:23

import cloudinary.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Child",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        max_length=50,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]+(?:\\s[A-Za-z]+)*$",
                                "Only letters and spaces are allowed",
                            )
                        ],
                        verbose_name="Full Name",
                    ),
                ),
                (
                    "preferred_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Preferred Name",
                    ),
                ),
                (
                    "residence",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Current Residence",
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Home District",
                    ),
                ),
                (
                    "tribe",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Tribe"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=6,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(1900, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date(2024, 12, 7)
                            ),
                        ],
                        verbose_name="Date of Birth",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        blank=True,
                        default=datetime.date(2013, 1, 1),
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(2013, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date(2024, 12, 7)
                            ),
                        ],
                    ),
                ),
                (
                    "picture",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            )
                        ],
                        verbose_name="child_picture",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Weight in kilograms",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Height in centimeters",
                    ),
                ),
                (
                    "aspiration",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Aspiration"
                    ),
                ),
                (
                    "c_interest",
                    models.TextField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Interest and abilities ",
                    ),
                ),
                (
                    "is_child_in_school",
                    models.BooleanField(
                        default=False, verbose_name="Is the Child in School?"
                    ),
                ),
                (
                    "is_sponsored",
                    models.BooleanField(
                        default=False, verbose_name="Is the Child sponsored?"
                    ),
                ),
                (
                    "father_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Father’s Name",
                    ),
                ),
                (
                    "is_father_alive",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=10,
                        verbose_name="Is the father alive?",
                    ),
                ),
                (
                    "father_description",
                    models.TextField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="if not what happened/if alive what is happening?",
                    ),
                ),
                (
                    "mother_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Mother’s name",
                    ),
                ),
                (
                    "is_mother_alive",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=10,
                        verbose_name="is the mother alive?",
                    ),
                ),
                (
                    "mother_description",
                    models.TextField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="if not what happened/if alive what is happening?",
                    ),
                ),
                (
                    "guardian",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Current guardian",
                    ),
                ),
                (
                    "guardian_contact",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        default="+256999999999",
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Guardian Contact",
                    ),
                ),
                (
                    "relationship_with_guardian",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Relationship with the Guardian",
                    ),
                ),
                (
                    "siblings",
                    models.TextField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="List names and age of the siblings",
                    ),
                ),
                (
                    "background_info",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Other family back ground information",
                    ),
                ),
                (
                    "health_status",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="General health status",
                    ),
                ),
                (
                    "responsibility",
                    models.TextField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Child’s responsibilities",
                    ),
                ),
                (
                    "relationship_with_christ",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Relationship with Christ",
                    ),
                ),
                (
                    "religion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Born-again Christian", "Born-again Christian"),
                            ("Anglican", "Anglican"),
                            ("Catholic", "Catholic"),
                            ("Muslim", "Muslim"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Religion of the Child",
                    ),
                ),
                (
                    "prayer_request",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Prayer needs/request",
                    ),
                ),
                (
                    "year_enrolled",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(2013),
                            django.core.validators.MaxValueValidator(2024),
                        ],
                        verbose_name="The year when the child was enrolled in the program?",
                    ),
                ),
                (
                    "is_departed",
                    models.BooleanField(
                        default=False, verbose_name="Is the Child departed?"
                    ),
                ),
                (
                    "staff_comment",
                    models.TextField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Staff Comment ",
                    ),
                ),
                (
                    "compiled_by",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Compiled by"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
            ],
            options={
                "verbose_name": "Child Bio Data",
                "verbose_name_plural": "Children Bio Data",
                "db_table": "child_info",
            },
        ),
        migrations.CreateModel(
            name="ChildProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_of_school",
                    models.CharField(max_length=50, verbose_name="Name of the School"),
                ),
                (
                    "previous_schools",
                    models.TextField(
                        max_length=200, verbose_name="Previous Schools Attended"
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        choices=[
                            ("Pre-School", "Pre-School"),
                            ("Kindergarten", "Kindergarten"),
                            ("Primary", "Primary"),
                            ("Secondary", "Secondary"),
                            ("Tertiary", "Tertiary"),
                            ("University", "University"),
                        ],
                        default="Pre-School",
                        max_length=20,
                        verbose_name="Level of Education",
                    ),
                ),
                (
                    "child_class",
                    models.CharField(
                        choices=[
                            ("", "Select Class"),
                            ("Baby", "Baby"),
                            ("Middle", "Middle"),
                            ("Top", "Top"),
                            ("P.1", "Primary One"),
                            ("P.2", "Primary Two"),
                            ("P.3", "Primary Three"),
                            ("P.4", "Primary Four"),
                            ("P.5", "Primary Five"),
                            ("P.6", "Primary Six"),
                            ("P.7", "Primary Seven"),
                            ("S.1", "Form One"),
                            ("S.2", "Form Two"),
                            ("S.3", "Form Three"),
                            ("S.4", "Form Four"),
                            ("S.5", "Form Five"),
                            ("S.6", "Form Six"),
                            ("Tertiary", "Tertiary"),
                            ("University", "University"),
                        ],
                        max_length=30,
                        verbose_name="Class",
                    ),
                ),
                (
                    "best_subject",
                    models.CharField(max_length=30, verbose_name="Best Subject"),
                ),
                ("score", models.IntegerField(default=0, verbose_name="Score")),
                (
                    "co_curricular_activity",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Co-curricular Activity (Optional)",
                    ),
                ),
                (
                    "responsibility_at_school",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Responsibility at School (Optional)",
                    ),
                ),
                (
                    "future_plans",
                    models.TextField(max_length=200, verbose_name="Future Plans"),
                ),
                (
                    "responsibility_at_home",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Responsibility at Home (Optional)",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Notes (Optional)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progresses",
                        to="child.child",
                        verbose_name="Child",
                    ),
                ),
            ],
            options={
                "verbose_name": "Child Progress",
                "verbose_name_plural": "Children Progress",
                "db_table": "child_progress",
            },
        ),
        migrations.CreateModel(
            name="ChildIncident",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "incident_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(2013, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date(2024, 12, 7)
                            ),
                        ],
                        verbose_name="Incident Date",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        max_length=100, verbose_name="Description of the Incident"
                    ),
                ),
                (
                    "action_taken",
                    models.CharField(max_length=100, verbose_name="Action Taken"),
                ),
                (
                    "results",
                    models.CharField(
                        max_length=100, verbose_name="Results after Action Taken"
                    ),
                ),
                (
                    "reported_by",
                    models.CharField(max_length=25, verbose_name="Reported By"),
                ),
                (
                    "followed_up_by",
                    models.CharField(max_length=25, verbose_name="Followed Up By"),
                ),
                (
                    "attachment",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="incident_attachments",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incidents",
                        to="child.child",
                        verbose_name="Child",
                    ),
                ),
            ],
            options={
                "verbose_name": "Child Incident",
                "verbose_name_plural": "Child Incidents",
                "db_table": "child_incident",
            },
        ),
        migrations.CreateModel(
            name="ChildDepart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "depart_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=datetime.date(2013, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date(2024, 12, 7)
                            ),
                        ],
                        verbose_name="Departure Date",
                    ),
                ),
                (
                    "depart_reason",
                    models.TextField(verbose_name="Reason for Departure"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="departures",
                        to="child.child",
                        verbose_name="Child Information",
                    ),
                ),
            ],
            options={
                "verbose_name": "Child Departure",
                "verbose_name_plural": "Child Departures",
            },
        ),
        migrations.CreateModel(
            name="ChildCorrespondence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "correspondence_type",
                    models.CharField(
                        choices=[
                            ("", "Select correspondence type"),
                            ("Christmas Gift", "Christmas Gift"),
                            ("Birthday Gift", "Birthday Gift"),
                            ("Letter", "Letter"),
                            ("Package", "Package"),
                            ("Money", "Money"),
                            ("Photo", "Photo"),
                        ],
                        max_length=20,
                        verbose_name="Select the type of correspondence",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("", "Select correspondence source"),
                            ("CHILD", "Child"),
                            ("SPONSOR", "Sponsor"),
                        ],
                        max_length=20,
                        verbose_name="Select the source of correspondence",
                    ),
                ),
                (
                    "attachment",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="correspondence_attachments",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Any comment?",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correspondences",
                        to="child.child",
                        verbose_name="Child",
                    ),
                ),
            ],
            options={
                "verbose_name": "Child Correspondence",
                "verbose_name_plural": "Child Correspondences",
                "db_table": "child_corres",
            },
        ),
        migrations.CreateModel(
            name="ChildProfilePicture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "picture",
                    cloudinary.models.CloudinaryField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            )
                        ],
                        verbose_name="child_picture",
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Uploaded at"),
                ),
                (
                    "is_current",
                    models.BooleanField(
                        default=False, verbose_name="Is Current Picture"
                    ),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_picture",
                        to="child.child",
                        verbose_name="Child",
                    ),
                ),
            ],
            options={
                "verbose_name": "Child Profile Picture",
                "verbose_name_plural": "Child Profile Pictures",
                "db_table": "child_pictures",
                "ordering": ["-uploaded_at"],
                "unique_together": {("child", "picture")},
            },
        ),
    ]
